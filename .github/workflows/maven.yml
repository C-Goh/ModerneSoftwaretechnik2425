# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file ./softwaretechnik24/pom.xml

    - name: Run Code Linting
      run: mvn spotless:check

    - name: Run Tests with Coverage
      run: mvn test jacoco:report
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Generate Javadoc
      run: mvn javadoc:javadoc

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      run: mvn com.github.ferstl:depgraph-maven-plugin:4.0.1:graph --file ./softwaretechnik24/pom.xml
    
    - name: Upload Code Coverage Report
      uses: actions/upload-artifact@v2
      with:
        name: coverage-report
        path: target/site/jacoco/index.html

    - name: Upload Javadoc
      uses: actions/upload-artifact@v2
      with:
        name: javadoc
        path: target/site/apidocs/

